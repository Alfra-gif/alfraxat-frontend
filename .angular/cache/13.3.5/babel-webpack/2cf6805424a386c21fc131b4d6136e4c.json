{"ast":null,"code":"import _asyncToGenerator from \"/home/ramon/Desktop/Institut Lacet\\xE0nia/S\\xEDntesi/Projecte/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\n\nconst check = (value, description) => {\n  if (typeof value !== 'string' || !value) {\n    throw new JWKInvalid(`${description} missing or invalid`);\n  }\n};\n\nexport function calculateJwkThumbprint(_x) {\n  return _calculateJwkThumbprint.apply(this, arguments);\n}\n\nfunction _calculateJwkThumbprint() {\n  _calculateJwkThumbprint = _asyncToGenerator(function* (jwk, digestAlgorithm = 'sha256') {\n    if (!isObject(jwk)) {\n      throw new TypeError('JWK must be an object');\n    }\n\n    if (digestAlgorithm !== 'sha256' && digestAlgorithm !== 'sha384' && digestAlgorithm !== 'sha512') {\n      throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n\n    let components;\n\n    switch (jwk.kty) {\n      case 'EC':\n        check(jwk.crv, '\"crv\" (Curve) Parameter');\n        check(jwk.x, '\"x\" (X Coordinate) Parameter');\n        check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n        components = {\n          crv: jwk.crv,\n          kty: jwk.kty,\n          x: jwk.x,\n          y: jwk.y\n        };\n        break;\n\n      case 'OKP':\n        check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n        check(jwk.x, '\"x\" (Public Key) Parameter');\n        components = {\n          crv: jwk.crv,\n          kty: jwk.kty,\n          x: jwk.x\n        };\n        break;\n\n      case 'RSA':\n        check(jwk.e, '\"e\" (Exponent) Parameter');\n        check(jwk.n, '\"n\" (Modulus) Parameter');\n        components = {\n          e: jwk.e,\n          kty: jwk.kty,\n          n: jwk.n\n        };\n        break;\n\n      case 'oct':\n        check(jwk.k, '\"k\" (Key Value) Parameter');\n        components = {\n          k: jwk.k,\n          kty: jwk.kty\n        };\n        break;\n\n      default:\n        throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(yield digest(digestAlgorithm, data));\n  });\n  return _calculateJwkThumbprint.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/ramon/Desktop/Institut Lacetània/Síntesi/Projecte/node_modules/jose/dist/browser/jwk/thumbprint.js"],"names":["digest","encode","base64url","JOSENotSupported","JWKInvalid","encoder","isObject","check","value","description","calculateJwkThumbprint","jwk","digestAlgorithm","TypeError","components","kty","crv","x","y","e","n","k","data","JSON","stringify"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAM,IAAIC,SAAnB,QAAoC,yBAApC;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AACA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AAClC,MAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6B,CAACA,KAAlC,EAAyC;AACrC,UAAM,IAAIJ,UAAJ,CAAgB,GAAEK,WAAY,qBAA9B,CAAN;AACH;AACJ,CAJD;;AAKA,gBAAsBC,sBAAtB;AAAA;AAAA;;;8CAAO,WAAsCC,GAAtC,EAA2CC,eAAe,GAAG,QAA7D,EAAuE;AAC1E,QAAI,CAACN,QAAQ,CAACK,GAAD,CAAb,EAAoB;AAChB,YAAM,IAAIE,SAAJ,CAAc,uBAAd,CAAN;AACH;;AACD,QAAID,eAAe,KAAK,QAApB,IACAA,eAAe,KAAK,QADpB,IAEAA,eAAe,KAAK,QAFxB,EAEkC;AAC9B,YAAM,IAAIC,SAAJ,CAAc,6DAAd,CAAN;AACH;;AACD,QAAIC,UAAJ;;AACA,YAAQH,GAAG,CAACI,GAAZ;AACI,WAAK,IAAL;AACIR,QAAAA,KAAK,CAACI,GAAG,CAACK,GAAL,EAAU,yBAAV,CAAL;AACAT,QAAAA,KAAK,CAACI,GAAG,CAACM,CAAL,EAAQ,8BAAR,CAAL;AACAV,QAAAA,KAAK,CAACI,GAAG,CAACO,CAAL,EAAQ,8BAAR,CAAL;AACAJ,QAAAA,UAAU,GAAG;AAAEE,UAAAA,GAAG,EAAEL,GAAG,CAACK,GAAX;AAAgBD,UAAAA,GAAG,EAAEJ,GAAG,CAACI,GAAzB;AAA8BE,UAAAA,CAAC,EAAEN,GAAG,CAACM,CAArC;AAAwCC,UAAAA,CAAC,EAAEP,GAAG,CAACO;AAA/C,SAAb;AACA;;AACJ,WAAK,KAAL;AACIX,QAAAA,KAAK,CAACI,GAAG,CAACK,GAAL,EAAU,uCAAV,CAAL;AACAT,QAAAA,KAAK,CAACI,GAAG,CAACM,CAAL,EAAQ,4BAAR,CAAL;AACAH,QAAAA,UAAU,GAAG;AAAEE,UAAAA,GAAG,EAAEL,GAAG,CAACK,GAAX;AAAgBD,UAAAA,GAAG,EAAEJ,GAAG,CAACI,GAAzB;AAA8BE,UAAAA,CAAC,EAAEN,GAAG,CAACM;AAArC,SAAb;AACA;;AACJ,WAAK,KAAL;AACIV,QAAAA,KAAK,CAACI,GAAG,CAACQ,CAAL,EAAQ,0BAAR,CAAL;AACAZ,QAAAA,KAAK,CAACI,GAAG,CAACS,CAAL,EAAQ,yBAAR,CAAL;AACAN,QAAAA,UAAU,GAAG;AAAEK,UAAAA,CAAC,EAAER,GAAG,CAACQ,CAAT;AAAYJ,UAAAA,GAAG,EAAEJ,GAAG,CAACI,GAArB;AAA0BK,UAAAA,CAAC,EAAET,GAAG,CAACS;AAAjC,SAAb;AACA;;AACJ,WAAK,KAAL;AACIb,QAAAA,KAAK,CAACI,GAAG,CAACU,CAAL,EAAQ,2BAAR,CAAL;AACAP,QAAAA,UAAU,GAAG;AAAEO,UAAAA,CAAC,EAAEV,GAAG,CAACU,CAAT;AAAYN,UAAAA,GAAG,EAAEJ,GAAG,CAACI;AAArB,SAAb;AACA;;AACJ;AACI,cAAM,IAAIZ,gBAAJ,CAAqB,mDAArB,CAAN;AAtBR;;AAwBA,UAAMmB,IAAI,GAAGjB,OAAO,CAACJ,MAAR,CAAesB,IAAI,CAACC,SAAL,CAAeV,UAAf,CAAf,CAAb;AACA,WAAOZ,SAAS,OAAOF,MAAM,CAACY,eAAD,EAAkBU,IAAlB,CAAb,CAAhB;AACH,G","sourcesContent":["import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm = 'sha256') {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\n"]},"metadata":{},"sourceType":"module"}