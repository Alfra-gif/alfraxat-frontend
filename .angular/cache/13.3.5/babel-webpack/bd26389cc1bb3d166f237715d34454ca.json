{"ast":null,"code":"import { User } from '../models/user';\nimport { Chat } from '../models/chat';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-cookie-service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../server-list/server-list.component\";\nimport * as i6 from \"../friend-list/friend-list.component\";\nimport * as i7 from \"@angular/forms\";\n\nfunction HomeComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"div\", 10);\n    i0.ɵɵelementStart(3, \"p\", 11);\n    i0.ɵɵelementStart(4, \"span\", 12);\n    i0.ɵɵtext(5, \"@\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵelementStart(8, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_10_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const user_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.add_friend(user_r3);\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(9, \"svg\", 14);\n    i0.ɵɵelement(10, \"path\", 15);\n    i0.ɵɵelement(11, \"path\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(12, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_10_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const user_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.remove_friend(user_r3);\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(13, \"svg\", 17);\n    i0.ɵɵelement(14, \"path\", 15);\n    i0.ɵɵelement(15, \"path\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r3 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate2(\"\", user_r3.username, \"\", user_r3.message, \"\");\n  }\n}\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(_userService, _route, _router, _cookieService, location) {\n      this._userService = _userService;\n      this._route = _route;\n      this._router = _router;\n      this._cookieService = _cookieService;\n      this.location = location;\n      this.user = new User(\"\", \"\", \"\", \"\", [], \"\", \"\", new Date(), \"\", []);\n      this.user_to_add = new User(\"\", \"\", \"\", \"\", [], \"\", \"\", new Date(), \"\", []);\n      this.chat = new Chat(\"\", [], [], new Date());\n      this.friends_array = [];\n      this.requests_array = [];\n      this.final_friends_array = [];\n      this.is_friend = false;\n      this.is_requested = false;\n      this.message = \"\";\n      this.id = \"\";\n    }\n\n    ngOnInit() {\n      this.token = JSON.parse(atob(this._cookieService.get(\"userToken\").split('.')[1])).user;\n      setTimeout(() => {\n        this._userService.get_user(this.token._id).subscribe(response => {\n          this.user = response.user;\n\n          for (let i = 0; i < this.user.friends.length; i++) {\n            this.friends_array.push(this.user.friends[i]);\n          }\n\n          for (let i = 0; i < this.friends_array.length; i++) {\n            this._userService.get_user(this.friends_array[i]).subscribe(response => {\n              this.final_friends_array.push(response.user);\n            });\n          }\n        });\n      }, 1000);\n    }\n\n    onSubmit() {\n      if (this.user.search != null && this.user.search != \"\") {\n        const pattern = /^[\\w_]{0,12}$/g;\n        let result = pattern.test(this.user.search);\n\n        if (result) {\n          setTimeout(() => {\n            this.users_array = [];\n\n            this._userService.search_user(this.user.search).subscribe(response => {\n              for (let i = 0; i < response.user.length; i++) {\n                if (response.user[i]._id != this.token._id) {\n                  this.users_array.push(response.user[i]);\n                }\n              }\n            });\n          }, 0);\n        }\n      }\n    }\n\n    add_friend(id) {\n      //console.log(this.token._id)\n      setTimeout(() => {\n        this._userService.get_user(id._id).subscribe(response => {\n          this.user_to_add = response.user;\n          this.requests_array = this.user_to_add.requests; //console.log(this.user_to_add)\n        });\n\n        this._userService.get_user(this.token._id).subscribe(response => {\n          this.user = response.user; //console.log(this.user)\n        });\n      }, 100);\n      setTimeout(() => {\n        for (let i = 0; i < this.user.friends.length; i++) {\n          if (this.user.friends[i] == this.user_to_add._id) {\n            this.is_friend = true;\n            alert(\"this user is already your friend!\");\n          }\n        }\n\n        for (let i = 0; i < this.user.friends.length; i++) {\n          if (this.token._id == this.user.friends[i]) {\n            this.is_friend = true;\n            alert(\"this user is already your friend!\");\n          }\n        }\n\n        for (let i = 0; i < this.user_to_add.requests.length; i++) {\n          if (this.token._id == this.user_to_add.requests[i]) {\n            this.is_friend = true;\n            alert(\"you already sent a request to this user.\");\n          }\n        }\n\n        if (this.is_requested == false && this.is_friend == false) {\n          this.requests_array.push(this.token._id);\n          this.user_to_add.requests = this.requests_array;\n\n          this._userService.edit_user(this.user_to_add).subscribe(response => {//console.log(response)\n          });\n\n          this.chat = new Chat(\"\", [], [], new Date());\n          this.chat.users_array = [this.token._id, id._id];\n\n          this._userService.create_chat(this.chat).subscribe(response => {\n            this.chat = response.chat;\n          });\n\n          setTimeout(() => {\n            this._userService.edit_user(this.user).subscribe(response => {});\n\n            this.final_friends_array = [];\n\n            for (let i = 0; i < this.friends_array.length; i++) {\n              this._userService.get_user(this.friends_array[i]).subscribe(response => {\n                this.final_friends_array.push(response.user);\n              });\n            }\n          }, 200);\n          setTimeout(() => {\n            alert(\"friend request sent.\");\n          }, 300);\n        }\n      }, 200);\n    }\n\n    remove_friend(id) {\n      this.token = JSON.parse(atob(this._cookieService.get(\"userToken\").split('.')[1])).user;\n\n      this._userService.get_user(this.token._id).subscribe(response => {\n        this.user = response.user;\n        this.friends_array = this.user.friends;\n\n        for (let i = 0; i < this.user.friends.length; i++) {\n          if (this.user.friends[i] == id._id) {\n            this.user.friends.splice([i], 1);\n          }\n        }\n      });\n\n      setTimeout(() => {\n        this._userService.edit_user(this.user).subscribe(response => {\n          this._userService.get_user(id._id).subscribe(response => {\n            this.user = response.user;\n            this.friends_array = this.user.friends;\n\n            for (let i = 0; i < this.user.friends.length; i++) {\n              if (this.user.friends[i] == this.token._id) {\n                this.user.friends.splice([i], 1);\n              }\n            }\n\n            this._userService.edit_user(this.user).subscribe(response => {});\n          });\n        }); //this.final_friends_array = []\n\n\n        for (let i = 0; i < this.friends_array.length; i++) {\n          this._userService.get_user(this.friends_array[i]).subscribe(response => {\n            this.final_friends_array.push(response.user);\n          });\n        }\n      }, 100);\n      setTimeout(() => {\n        const prevConfiguration = this._router.routeReuseStrategy.shouldReuseRoute;\n\n        this._router.routeReuseStrategy.shouldReuseRoute = () => false;\n\n        this._router.onSameUrlNavigation = \"reload\";\n\n        this._router.navigate([\"./\"], {\n          relativeTo: this._route\n        }).then(() => {\n          this._router.routeReuseStrategy.shouldReuseRoute = prevConfiguration;\n          this._router.onSameUrlNavigation = \"ignore\";\n        });\n      }, 200);\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CookieService), i0.ɵɵdirectiveInject(i4.Location));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 11,\n    vars: 4,\n    consts: [[3, \"input\", \"input2\"], [1, \"home\"], [1, \"upper-chat\"], [1, \"inner-upper-chat\"], [\"method\", \"POST\", 3, \"ngSubmit\"], [\"form_post\", \"ngForm\"], [\"autocomplete\", \"off\", \"type\", \"text\", \"name\", \"search\", \"placeholder\", \"Search\", \"required\", \"\", 1, \"search\", 3, \"ngModel\", \"ngModelChange\"], [\"search\", \"ngModel\"], [4, \"ngFor\", \"ngForOf\"], [1, \"user\"], [1, \"friend-buttons\"], [1, \"inner-p\"], [1, \"tag\"], [\"type\", \"submit\", 1, \"inner-button\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-person-plus\"], [\"d\", \"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"], [\"fill-rule\", \"evenodd\", \"d\", \"M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-person-x\"], [\"fill-rule\", \"evenodd\", \"d\", \"M12.146 5.146a.5.5 0 0 1 .708 0L14 6.293l1.146-1.147a.5.5 0 0 1 .708.708L14.707 7l1.147 1.146a.5.5 0 0 1-.708.708L14 7.707l-1.146 1.147a.5.5 0 0 1-.708-.708L13.293 7l-1.147-1.146a.5.5 0 0 1 0-.708z\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-server-list\", 0);\n        i0.ɵɵelement(1, \"app-friend-list\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"p\", 3);\n        i0.ɵɵtext(5, \"Search your friends!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"input\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.user.search = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, HomeComponent_div_10_Template, 16, 2, \"div\", 8);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"input\", ctx.id)(\"input2\", ctx.chat);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.search);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users_array);\n      }\n    },\n    directives: [i5.ServerListComponent, i6.FriendListComponent, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.NgForm, i7.DefaultValueAccessor, i7.RequiredValidator, i7.NgControlStatus, i7.NgModel, i4.NgForOf],\n    styles: [\"\"]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}