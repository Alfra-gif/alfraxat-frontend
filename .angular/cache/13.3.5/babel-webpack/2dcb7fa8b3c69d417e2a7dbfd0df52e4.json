{"ast":null,"code":"import _asyncToGenerator from \"/home/ramon/Desktop/Institut Lacet\\xE0nia/S\\xEDntesi/Projecte/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport function flattenedDecrypt(_x, _x2, _x3) {\n  return _flattenedDecrypt.apply(this, arguments);\n}\n\nfunction _flattenedDecrypt() {\n  _flattenedDecrypt = _asyncToGenerator(function* (jwe, key, options) {\n    var _a;\n\n    if (!isObject(jwe)) {\n      throw new JWEInvalid('Flattened JWE must be an object');\n    }\n\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n      throw new JWEInvalid('JOSE Header missing');\n    }\n\n    if (typeof jwe.iv !== 'string') {\n      throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n\n    if (typeof jwe.ciphertext !== 'string') {\n      throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n\n    if (typeof jwe.tag !== 'string') {\n      throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n      throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n      throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n      throw new JWEInvalid('JWE AAD incorrect type');\n    }\n\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n      throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n      throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n\n    let parsedProt;\n\n    if (jwe.protected) {\n      const protectedHeader = base64url(jwe.protected);\n\n      try {\n        parsedProt = JSON.parse(decoder.decode(protectedHeader));\n      } catch (_b) {\n        throw new JWEInvalid('JWE Protected Header is invalid');\n      }\n    }\n\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n      throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n\n    const joseHeader = { ...parsedProt,\n      ...jwe.header,\n      ...jwe.unprotected\n    };\n    validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n\n    if (joseHeader.zip !== undefined) {\n      if (!parsedProt || !parsedProt.zip) {\n        throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n      }\n\n      if (joseHeader.zip !== 'DEF') {\n        throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n      }\n    }\n\n    const {\n      alg,\n      enc\n    } = joseHeader;\n\n    if (typeof alg !== 'string' || !alg) {\n      throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n\n    if (typeof enc !== 'string' || !enc) {\n      throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options && validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n      throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n      throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n\n    let encryptedKey;\n\n    if (jwe.encrypted_key !== undefined) {\n      encryptedKey = base64url(jwe.encrypted_key);\n    }\n\n    let resolvedKey = false;\n\n    if (typeof key === 'function') {\n      key = yield key(parsedProt, jwe);\n      resolvedKey = true;\n    }\n\n    let cek;\n\n    try {\n      cek = yield decryptKeyManagement(alg, key, encryptedKey, joseHeader);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw err;\n      }\n\n      cek = generateCek(enc);\n    }\n\n    const iv = base64url(jwe.iv);\n    const tag = base64url(jwe.tag);\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n\n    if (jwe.aad !== undefined) {\n      additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    } else {\n      additionalData = protectedHeader;\n    }\n\n    let plaintext = yield decrypt(enc, cek, base64url(jwe.ciphertext), iv, tag, additionalData);\n\n    if (joseHeader.zip === 'DEF') {\n      plaintext = yield ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n\n    const result = {\n      plaintext\n    };\n\n    if (jwe.protected !== undefined) {\n      result.protectedHeader = parsedProt;\n    }\n\n    if (jwe.aad !== undefined) {\n      result.additionalAuthenticatedData = base64url(jwe.aad);\n    }\n\n    if (jwe.unprotected !== undefined) {\n      result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n\n    if (jwe.header !== undefined) {\n      result.unprotectedHeader = jwe.header;\n    }\n\n    if (resolvedKey) {\n      return { ...result,\n        key\n      };\n    }\n\n    return result;\n  });\n  return _flattenedDecrypt.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/ramon/Desktop/Institut Lacetània/Síntesi/Projecte/node_modules/jose/dist/browser/jwe/flattened/decrypt.js"],"names":["decode","base64url","decrypt","inflate","JOSEAlgNotAllowed","JOSENotSupported","JWEInvalid","isDisjoint","isObject","decryptKeyManagement","encoder","decoder","concat","generateCek","validateCrit","validateAlgorithms","flattenedDecrypt","jwe","key","options","_a","protected","undefined","header","unprotected","iv","ciphertext","tag","encrypted_key","aad","parsedProt","protectedHeader","JSON","parse","_b","joseHeader","Map","crit","zip","alg","enc","keyManagementAlgorithms","contentEncryptionAlgorithms","has","encryptedKey","resolvedKey","cek","err","TypeError","encode","additionalData","plaintext","inflateRaw","result","additionalAuthenticatedData","sharedUnprotectedHeader","unprotectedHeader"],"mappings":"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","sourcesContent":["import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        const protectedHeader = base64url(jwe.protected);\n        try {\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        encryptedKey = base64url(jwe.encrypted_key);\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader);\n    }\n    catch (err) {\n        if (err instanceof TypeError) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    const iv = base64url(jwe.iv);\n    const tag = base64url(jwe.tag);\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let plaintext = await decrypt(enc, cek, base64url(jwe.ciphertext), iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        result.additionalAuthenticatedData = base64url(jwe.aad);\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}