{"ast":null,"code":"import _asyncToGenerator from \"/home/ramon/Desktop/Institut Lacet\\xE0nia/S\\xEDntesi/Projecte/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n  constructor(payload) {\n    this._flattened = new FlattenedSign(payload);\n  }\n\n  setProtectedHeader(protectedHeader) {\n    this._flattened.setProtectedHeader(protectedHeader);\n\n    return this;\n  }\n\n  sign(key, options) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const jws = yield _this._flattened.sign(key, options);\n\n      if (jws.payload === undefined) {\n        throw new TypeError('use the flattened module for creating JWS with b64: false');\n      }\n\n      return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    })();\n  }\n\n}","map":{"version":3,"sources":["/home/ramon/Desktop/Institut Lacetània/Síntesi/Projecte/node_modules/jose/dist/browser/jws/compact/sign.js"],"names":["FlattenedSign","CompactSign","constructor","payload","_flattened","setProtectedHeader","protectedHeader","sign","key","options","jws","undefined","TypeError","protected","signature"],"mappings":";AAAA,SAASA,aAAT,QAA8B,sBAA9B;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKC,UAAL,GAAkB,IAAIJ,aAAJ,CAAkBG,OAAlB,CAAlB;AACH;;AACDE,EAAAA,kBAAkB,CAACC,eAAD,EAAkB;AAChC,SAAKF,UAAL,CAAgBC,kBAAhB,CAAmCC,eAAnC;;AACA,WAAO,IAAP;AACH;;AACKC,EAAAA,IAAI,CAACC,GAAD,EAAMC,OAAN,EAAe;AAAA;;AAAA;AACrB,YAAMC,GAAG,SAAS,KAAI,CAACN,UAAL,CAAgBG,IAAhB,CAAqBC,GAArB,EAA0BC,OAA1B,CAAlB;;AACA,UAAIC,GAAG,CAACP,OAAJ,KAAgBQ,SAApB,EAA+B;AAC3B,cAAM,IAAIC,SAAJ,CAAc,2DAAd,CAAN;AACH;;AACD,aAAQ,GAAEF,GAAG,CAACG,SAAU,IAAGH,GAAG,CAACP,OAAQ,IAAGO,GAAG,CAACI,SAAU,EAAxD;AALqB;AAMxB;;AAdoB","sourcesContent":["import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}