{"ast":null,"code":"import _asyncToGenerator from \"/home/ramon/Desktop/Institut Lacet\\xE0nia/S\\xEDntesi/Projecte/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { JOSENotSupported } from '../util/errors.js';\nexport const inflate = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.');\n  });\n\n  return function inflate() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const deflate = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.');\n  });\n\n  return function deflate() {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/ramon/Desktop/Institut Lacetània/Síntesi/Projecte/node_modules/jose/dist/browser/runtime/zlib.js"],"names":["JOSENotSupported","inflate","deflate"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,mBAAjC;AACA,OAAO,MAAMC,OAAO;AAAA,+BAAG,aAAY;AAC/B,UAAM,IAAID,gBAAJ,CAAqB,wLAArB,CAAN;AACH,GAFmB;;AAAA,kBAAPC,OAAO;AAAA;AAAA;AAAA,GAAb;AAGP,OAAO,MAAMC,OAAO;AAAA,gCAAG,aAAY;AAC/B,UAAM,IAAIF,gBAAJ,CAAqB,wLAArB,CAAN;AACH,GAFmB;;AAAA,kBAAPE,OAAO;AAAA;AAAA;AAAA,GAAb","sourcesContent":["import { JOSENotSupported } from '../util/errors.js';\nexport const inflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.');\n};\nexport const deflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.');\n};\n"]},"metadata":{},"sourceType":"module"}