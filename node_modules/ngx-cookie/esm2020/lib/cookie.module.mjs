import { DOCUMENT } from '@angular/common';
import { NgModule } from '@angular/core';
import { CookieWriterService } from './cookie-writer.service';
import { CookieOptionsProvider } from './cookie-options.provider';
import { cookieServiceFactory } from './cookie.factory';
import { CookieService } from './cookie.service';
import { COOKIE_OPTIONS, COOKIE_WRITER } from './tokens';
import * as i0 from "@angular/core";
export class CookieModule {
    /**
     * Use this method in your root module to provide the CookieService
     */
    static withOptions(options = {}) {
        return {
            ngModule: CookieModule,
            providers: [
                { provide: COOKIE_OPTIONS, useValue: options },
                { provide: COOKIE_WRITER, useClass: CookieWriterService },
                { provide: CookieService, useFactory: cookieServiceFactory, deps: [DOCUMENT, CookieOptionsProvider, COOKIE_WRITER] }
            ]
        };
    }
    /**
     * @deprecated use `CookieModule.withOptions()` instead
     * Use this method in your root module to provide the CookieService
     */
    static forRoot(options = {}) {
        return this.withOptions(options);
    }
    /**
     * @deprecated use `CookieModule.withOptions()` instead
     * Use this method in your other (non root) modules to import the directive/pipe
     */
    static forChild(options = {}) {
        return this.withOptions(options);
    }
}
CookieModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CookieModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CookieModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CookieModule });
CookieModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CookieModule, providers: [CookieOptionsProvider] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CookieModule, decorators: [{
            type: NgModule,
            args: [{
                    providers: [CookieOptionsProvider]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29va2llLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1jb29raWUvc3JjL2xpYi9jb29raWUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUc5RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUsTUFBTSxVQUFVLENBQUM7O0FBTXpELE1BQU0sT0FBTyxZQUFZO0lBRXZCOztPQUVHO0lBQ0gsTUFBTSxDQUFDLFdBQVcsQ0FBQyxVQUF5QixFQUFFO1FBQzVDLE9BQU87WUFDTCxRQUFRLEVBQUUsWUFBWTtZQUN0QixTQUFTLEVBQUU7Z0JBQ1QsRUFBQyxPQUFPLEVBQUUsY0FBYyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUM7Z0JBQzVDLEVBQUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsbUJBQW1CLEVBQUM7Z0JBQ3ZELEVBQUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxVQUFVLEVBQUUsb0JBQW9CLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxFQUFFLHFCQUFxQixFQUFFLGFBQWEsQ0FBQyxFQUFDO2FBQ25IO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRDs7O09BR0c7SUFDSCxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQXlCLEVBQUU7UUFDeEMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRDs7O09BR0c7SUFDSCxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQXlCLEVBQUU7UUFDekMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25DLENBQUM7O3lHQTlCVSxZQUFZOzBHQUFaLFlBQVk7MEdBQVosWUFBWSxhQUZaLENBQUMscUJBQXFCLENBQUM7MkZBRXZCLFlBQVk7a0JBSHhCLFFBQVE7bUJBQUM7b0JBQ1IsU0FBUyxFQUFFLENBQUMscUJBQXFCLENBQUM7aUJBQ25DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvb2tpZVdyaXRlclNlcnZpY2UgfSBmcm9tICcuL2Nvb2tpZS13cml0ZXIuc2VydmljZSc7XG5cbmltcG9ydCB7IENvb2tpZU9wdGlvbnMgfSBmcm9tICcuL2Nvb2tpZS5tb2RlbCc7XG5pbXBvcnQgeyBDb29raWVPcHRpb25zUHJvdmlkZXIgfSBmcm9tICcuL2Nvb2tpZS1vcHRpb25zLnByb3ZpZGVyJztcbmltcG9ydCB7IGNvb2tpZVNlcnZpY2VGYWN0b3J5IH0gZnJvbSAnLi9jb29raWUuZmFjdG9yeSc7XG5pbXBvcnQgeyBDb29raWVTZXJ2aWNlIH0gZnJvbSAnLi9jb29raWUuc2VydmljZSc7XG5pbXBvcnQgeyBDT09LSUVfT1BUSU9OUywgQ09PS0lFX1dSSVRFUiB9IGZyb20gJy4vdG9rZW5zJztcblxuXG5ATmdNb2R1bGUoe1xuICBwcm92aWRlcnM6IFtDb29raWVPcHRpb25zUHJvdmlkZXJdXG59KVxuZXhwb3J0IGNsYXNzIENvb2tpZU1vZHVsZSB7XG5cbiAgLyoqXG4gICAqIFVzZSB0aGlzIG1ldGhvZCBpbiB5b3VyIHJvb3QgbW9kdWxlIHRvIHByb3ZpZGUgdGhlIENvb2tpZVNlcnZpY2VcbiAgICovXG4gIHN0YXRpYyB3aXRoT3B0aW9ucyhvcHRpb25zOiBDb29raWVPcHRpb25zID0ge30pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPENvb2tpZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQ29va2llTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtwcm92aWRlOiBDT09LSUVfT1BUSU9OUywgdXNlVmFsdWU6IG9wdGlvbnN9LFxuICAgICAgICB7cHJvdmlkZTogQ09PS0lFX1dSSVRFUiwgdXNlQ2xhc3M6IENvb2tpZVdyaXRlclNlcnZpY2V9LFxuICAgICAgICB7cHJvdmlkZTogQ29va2llU2VydmljZSwgdXNlRmFjdG9yeTogY29va2llU2VydmljZUZhY3RvcnksIGRlcHM6IFtET0NVTUVOVCwgQ29va2llT3B0aW9uc1Byb3ZpZGVyLCBDT09LSUVfV1JJVEVSXX1cbiAgICAgIF1cbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIHVzZSBgQ29va2llTW9kdWxlLndpdGhPcHRpb25zKClgIGluc3RlYWRcbiAgICogVXNlIHRoaXMgbWV0aG9kIGluIHlvdXIgcm9vdCBtb2R1bGUgdG8gcHJvdmlkZSB0aGUgQ29va2llU2VydmljZVxuICAgKi9cbiAgc3RhdGljIGZvclJvb3Qob3B0aW9uczogQ29va2llT3B0aW9ucyA9IHt9KTogTW9kdWxlV2l0aFByb3ZpZGVyczxDb29raWVNb2R1bGU+IHtcbiAgICByZXR1cm4gdGhpcy53aXRoT3B0aW9ucyhvcHRpb25zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCB1c2UgYENvb2tpZU1vZHVsZS53aXRoT3B0aW9ucygpYCBpbnN0ZWFkXG4gICAqIFVzZSB0aGlzIG1ldGhvZCBpbiB5b3VyIG90aGVyIChub24gcm9vdCkgbW9kdWxlcyB0byBpbXBvcnQgdGhlIGRpcmVjdGl2ZS9waXBlXG4gICAqL1xuICBzdGF0aWMgZm9yQ2hpbGQob3B0aW9uczogQ29va2llT3B0aW9ucyA9IHt9KTogTW9kdWxlV2l0aFByb3ZpZGVyczxDb29raWVNb2R1bGU+IHtcbiAgICByZXR1cm4gdGhpcy53aXRoT3B0aW9ucyhvcHRpb25zKTtcbiAgfVxuXG59XG4iXX0=